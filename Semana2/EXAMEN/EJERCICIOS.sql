--1.Mostrar el nombre de todos los jugadores ordenados alfabéticamente. (Debe devolver 432 registros.)
SELECT * FROM JUGADORES ORDER BY NOMBRE ASC;

--2.Mostrar el nombre de todos los equipos ordenados alfabéticamente.
SELECT * FROM EQUIPOS ORDER BY NOMBRE ASC;

--3.Mostrar el nombre de los equipos del este.
SELECT * FROM EQUIPOS
WHERE CONFERENCIA = 'East' ORDER BY NOMBRE;

--4.Mostrar los equipos donde su ciudad empieza por c.
SELECT * FROM EQUIPOS WHERE NOMBRE LIKE 'C%';

--5.Mostrar todos los jugadores y su equipo ordenado por nombre del equipo. (Debe devolver 432 registros)
SELECT J.NOMBRE AS NOMBRE_JUGADOR, E.NOMBRE AS NOMBRE_EQUIPO
FROM EQUIPOS E
RIGHT JOIN JUGADORES J
ON E.NOMBRE = J.NOMBRE_EQUIPO
ORDER BY NOMBRE_EQUIPO;

--6.	Mostrar todos los jugadores del equipo «Raptors».
SELECT J.NOMBRE AS NOMBRE_JUGADOR, E.NOMBRE AS NOMBRE_EQUIPO
FROM EQUIPOS E
RIGHT JOIN JUGADORES J
ON E.NOMBRE = J.NOMBRE_EQUIPO
WHERE NOMBRE_EQUIPO = 'Raptors'
ORDER BY NOMBRE_jugador;

--7.	Mostrar los puntos por partido de ‘Pau Gasol’.
SELECT E.PUNTOS_POR_PARTIDO AS PUNTOS_POR_PARTIDO
FROM ESTADISTICAS E
INNER JOIN JUGADORES J 
ON E.JUGADOR = J.CODIGO
WHERE J.NOMBRE = 'Pau Gasol';

--8.	Mostrar los puntos por partido de ‘Pau Gasol’ en la temporada ’04/05′.
SELECT E.TEMPORADA AS TEMPORADA, E.PUNTOS_POR_PARTIDO AS PUNTOS_POR_PARTIDO
FROM ESTADISTICAS E
INNER JOIN JUGADORES J 
ON E.JUGADOR = J.CODIGO
WHERE J.NOMBRE = 'Pau Gasol' AND TEMPORADA = '04/05';


--9.	Mostrar el número de puntos de cada jugador en toda su carrera. (Debe devolver 424 registros.)
SELECT J.NOMBRE AS NOMBRE_JUGADOR, SUM(E.PUNTOS_POR_PARTIDO) AS TOTAL_PUNTOS
FROM JUGADORES J
INNER JOIN ESTADISTICAS E
ON J.CODIGO = E.JUGADOR
GROUP BY J.NOMBRE
ORDER BY TOTAL_PUNTOS DESC;

--10.	Mostrar el número de jugadores de cada equipo.
SELECT E.NOMBRE AS NOMBRE_EQUIPO, COUNT(J.CODIGO) AS NUMERO_JUGADORES
FROM EQUIPOS E
LEFT JOIN JUGADORES J
ON E.NOMBRE = J.NOMBRE_EQUIPO
GROUP BY E.NOMBRE
ORDER BY E.NOMBRE ASC;

--11.	Mostrar el jugador que más puntos ha realizado en toda su carrera.
SELECT J.NOMBRE AS NOMBRE_JUGADOR, SUM(E.PUNTOS_POR_PARTIDO) AS TOTAL_PUNTOS
FROM JUGADORES J
INNER JOIN ESTADISTICAS E
ON J.CODIGO = E.JUGADOR
GROUP BY J.NOMBRE
ORDER BY TOTAL_PUNTOS DESC
FETCH FIRST 1 ROW ONLY;

--12.	Mostrar el nombre del equipo, conferencia y división del jugador más alto de la NBA.
SELECT J.NOMBRE AS JUGADOR, J.ALTURA, E.NOMBRE AS NOMBRE_EQUIPO, E.CONFERENCIA, E.DIVISION
FROM JUGADORES J
INNER JOIN EQUIPOS E 
ON J.NOMBRE_EQUIPO = E.NOMBRE
WHERE J.ALTURA = (SELECT MAX(ALTURA) 
                FROM JUGADORES);

--13.	Mostrar el partido o partidos (equipo_local, equipo_visitante y diferencia)
--con mayor diferencia de puntos. (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_MAYOR_PUNTOS
AS
SELECT EQUIPO_LOCAL, EQUIPO_VISITANTE, ABS(PUNTOS_LOCAL - PUNTOS_VISITANTE) AS DIFERENCIA
FROM PARTIDOS
WHERE ABS(PUNTOS_LOCAL - PUNTOS_VISITANTE) = (
        SELECT MAX(ABS(PUNTOS_LOCAL - PUNTOS_VISITANTE)) 
        FROM PARTIDOS
    )
ORDER BY EQUIPO_LOCAL;
--EJECUTAR VISTA
SELECT * FROM V_MAYOR_PUNTOS;

--14.	Mostrar la media de puntos en partidos de los equipos de la división Pacific. (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_MEDIA_PUNTOS
AS
SELECT E.NOMBRE AS NOMBRE_EQUIPO, E.DIVISION,ROUND(AVG(P.PUNTOS_LOCAL + P.PUNTOS_VISITANTE), 2) AS TOTAL_MEDIA
FROM EQUIPOS E
INNER JOIN PARTIDOS P 
ON (E.NOMBRE = P.EQUIPO_LOCAL OR E.NOMBRE = P.EQUIPO_VISITANTE)
WHERE E.DIVISION = 'Pacific'
GROUP BY E.NOMBRE, E.DIVISION
ORDER BY TOTAL_MEDIA DESC;
--
SELECT * FROM V_MEDIA_PUNTOS;

--15.	Mostrar los puntos de cada equipo en los partidos, tanto de local como
--de visitante. Usa una vista (CREAR UNA VIEW)
CREATE OR REPLACE VIEW V_TOTAL_PUNTOS_E
AS
SELECT P.CODIGO AS NO_PARTIDO, E.NOMBRE AS NOMBRE_EQUIPO, P.PUNTOS_LOCAL, P.PUNTOS_VISITANTE
FROM EQUIPOS E
INNER JOIN PARTIDOS P 
ON (E.NOMBRE = P.EQUIPO_LOCAL OR E.NOMBRE = P.EQUIPO_VISITANTE);


SELECT * FROM V_TOTAL_PUNTOS_E;



SELECT * FROM JUGADORES;
SELECT * FROM EQUIPOS;








